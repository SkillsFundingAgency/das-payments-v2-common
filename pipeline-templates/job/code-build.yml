parameters:
  SolutionBaseName:
  DotNetStandardPackagesToPack: ''
  DotNetFrameworkPackagesToPack: ''
  SdkStyleFrameworkProjects: false
  BuildConfiguration:

jobs:
- ${{ if ne(parameters.DotNetFrameworkPackagesToPack, '') }}:
  - job: CodeBuild
    pool:
      name: DAS - Continuous Integration Agents
      workspace:
        clean: all
    variables:
    - group: BUILD Management Resources
    steps:
    - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

    - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks

    - task: DotNetCoreCLI@2
      displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }}
      inputs:
        command: publish
        publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
        projects: src/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.csproj
        arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
        modifyOutputPath: true
        zipAfterPublish: true

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 5.x'
      inputs:
        versionSpec: 5.x
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
          restoreSolution: ${{ parameters.WorkingDirectory }}/**/*.sln

    - task: CopyFiles@2
      displayName: Copy Files to $(build.artifactstagingdirectory)/publish
      inputs:
        Contents: |
          azure/**
        TargetFolder: $(build.artifactstagingdirectory)/publish
        OverWrite: true
    - template: azure-pipelines-templates/build/step/nuget-pack.yml@das-platform-building-blocks
      parameters:
          ${{ if eq(parameters.SdkStyleFrameworkProjects, true) }}:
          DotNetStandardPackagesToPack: ${{ parameters.DotNetFrameworkPackagesToPack }}
          ${{ else }}:
          DotNetFrameworkPackagesToPack: ${{ parameters.DotNetFrameworkPackagesToPack }}
    - task: PublishPipelineArtifact@1
      displayName: Publish Build Artifact
      inputs:
        targetPath: $(build.artifactstagingdirectory)/publish
        artifactName: ${{ parameters.SolutionBaseName }}
- ${{ elseif ne(parameters.DotNetStandardPackagesToPack, '') }}:
  - job: CliCodeBuild
    pool:
      name: DAS - Continuous Integration Agents
    variables:
    - group: BUILD Management Resources
    - name: buildConfiguration
      value: release
    steps:
      - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks
        parameters:
          ConfigFilePath: ${{ parameters.WorkingDirectory }}/GitVersion.yml
      - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
        parameters:
          SonarCloudProjectKey: ${{ parameters.SonarCloudProjectKey }}
          TargetProjects: ${{ parameters.WorkingDirectory }}/**/*.csproj
          UnitTestProjects: ${{parameters.WorkingDirectory }}/**/*UnitTests.csproj
      - template: azure-pipelines-templates/build/step/nuget-pack.yml@das-platform-building-blocks
        parameters:
          DotNetStandardPackagesToPack: ${{ parameters.DotNetStandardPackagesToPack }}